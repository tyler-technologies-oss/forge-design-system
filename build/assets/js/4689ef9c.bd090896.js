"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[2073],{59532:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"components/progress-and-loading/linear-progress/linear-progress","title":"Linear progress","description":"Overview: Progress indicators","source":"@site/docs/components/progress-and-loading/linear-progress/linear-progress.md","sourceDirName":"components/progress-and-loading/linear-progress","slug":"/components/progress-and-loading/linear-progress/","permalink":"/components/progress-and-loading/linear-progress/","draft":false,"unlisted":false,"editUrl":"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/components/progress-and-loading/linear-progress/linear-progress.md","tags":[],"version":"current","lastUpdatedAt":1738178637000,"frontMatter":{"sidebar_custom_props":{"shortDescription":"Linear indicators express an unspecified wait time or display the length of a process.","thumbnail":"./img/all-components/linear-progress-mini.png"}},"sidebar":"componentsSidebar","previous":{"title":"Circular progress","permalink":"/components/progress-and-loading/circular-progress/"},"next":{"title":"Skeleton","permalink":"/components/progress-and-loading/skeleton/"}}');var t=n(74848),i=n(28453);const o={sidebar_custom_props:{shortDescription:"Linear indicators express an unspecified wait time or display the length of a process.",thumbnail:"./img/all-components/linear-progress-mini.png"}},a="Linear progress",l={},c=[{value:"Overview: Progress indicators",id:"overview-progress-indicators",level:2},{value:"Types of progress indicators",id:"types-of-progress-indicators",level:3},{value:"Overview: Linear progress indicator",id:"overview-linear-progress-indicator",level:2},{value:"When to use: Linear vs circular progress indicators",id:"when-to-use-linear-vs-circular-progress-indicators",level:2},{value:"Types",id:"types",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{ComponentVisual:r,DoDontGrid:o,DoDontText:a,DoDontTextSection:l}=s;return r||p("ComponentVisual",!0),o||p("DoDontGrid",!0),a||p("DoDontText",!0),l||p("DoDontTextSection",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"linear-progress",children:"Linear progress"})}),"\n",(0,t.jsx)(r,{storybookUrl:"https://forge.tylerdev.io/main/?path=/docs/components-linear-progress--docs",children:(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:n(99357).A+"",width:"896",height:"288"})})}),"\n",(0,t.jsx)(s.h2,{id:"overview-progress-indicators",children:"Overview: Progress indicators"}),"\n",(0,t.jsx)(s.p,{children:"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. They communicate an app\u2019s state and indicate available actions, such as whether users can navigate away from the current screen. Use a progress indicator for operations that take more than 1 second."}),"\n",(0,t.jsx)(s.p,{children:"Progress indicators are used to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Assure the user that the system is working."}),"\n",(0,t.jsx)(s.li,{children:"Provide operational transparency."}),"\n",(0,t.jsx)(s.li,{children:"Communicate progress made vs progress pending."}),"\n",(0,t.jsx)(s.li,{children:"Reduce users perception of time elapsed."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"types-of-progress-indicators",children:"Types of progress indicators"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Context"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Component"}),(0,t.jsx)(s.th,{style:{textAlign:"left"},children:"Guidance"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Initial page load"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"/components/progress-and-loading/skeleton",children:"Skeleton + progressive loading"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Use skeleton loading when content size/shape is known. Load skeleton components, then fade in components as they become available."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Initial page load"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Linear page progress"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Use when the content to be loaded is of unknown or variable size or quantity. Display a description of the process with a linear progress bar (see pattern below)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Full page load or change"}),(0,t.jsxs)(s.td,{style:{textAlign:"left"},children:["Full page ",(0,t.jsx)(s.a,{href:"/components/notifications-and-messages/busy-indicator",children:"busy indicator"})]}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Use an overlay to prevent users from interacting with content on a page due to a change, server error, or form submission."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Multiple components"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"/components/progress-and-loading/skeleton",children:"Skeleton + progressive loading"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Load skeleton components, then fade in components as they become available."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Single component within a page"}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:(0,t.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"Inline circular progress spinner"})}),(0,t.jsx)(s.td,{style:{textAlign:"left"},children:"Use a contextual circular progress indicator to communicate that either a component's state or data is changing."})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"overview-linear-progress-indicator",children:"Overview: Linear progress indicator"}),"\n",(0,t.jsx)(s.p,{children:"Use a linear progress indicator to communicate that a specific component is loading. Specifically, linear progress indicators may be used at the bottom of text fields, in dropdowns, and in expansion panels."}),"\n",(0,t.jsxs)(s.p,{children:["Use ",(0,t.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"circular progress spinners"})," inside components like list items, buttons, and cards."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"when-to-use-linear-vs-circular-progress-indicators",children:"When to use: Linear vs circular progress indicators"}),"\n",(0,t.jsxs)(s.p,{children:["Forge offers two visually distinct types of progress indicators: linear and ",(0,t.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"circular progress"})," indicators. Only one type should represent each kind of activity in an app. For example, if a refresh action displays a circular indicator on one screen, that same action shouldn\u2019t use a linear indicator elsewhere in the app.Researchers Gronier and Lallemend conducted an experiment to determine what the best metaphor to display during waiting time is. They measured a number of components (progress bar, countdown, text, etc) against perceived waiting time and satisfaction. They found that while a countdown yields the highest satisfaction level because it informs the user exactly how long they have to wait, ",(0,t.jsx)(s.strong,{children:"linear progress bars"})," were actually associated with the shortest perceived waiting time and a high satisfaction score (5.8 out of 7).\xa0",(0,t.jsx)(s.a,{href:"http://www.guillaumegronier.com/cv/resources/Articles/2013_WorkshopHCI_Gronier.pdf",children:"Read more"}),".\xa0For this reason, we recommend a heavier use of\xa0",(0,t.jsx)(s.strong,{children:"linear progress indicators"}),".\xa0"]}),"\n",(0,t.jsxs)(s.p,{children:["Because ",(0,t.jsx)(s.strong,{children:"circular progress indicators"})," fit better inside components, use them to\xa0communicate the state of a component or its data is changing.\xa0Use circular progress indicators for inline components; use linear progress indicators for other scenarios."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"types",children:"Types"}),"\n",(0,t.jsx)(s.p,{children:"There are two types of linear progress indicators: determinate and indeterminate."}),"\n",(0,t.jsx)(s.p,{children:"Determinate indicators display how long a process will take. They should be used when the process completion rate can be detected."}),"\n",(0,t.jsx)(s.p,{children:"Determinate progress indicators fill from 0% to 100%."}),"\n",(0,t.jsx)(s.p,{children:"Indeterminate progress indicators move along a fixed track, growing and shrinking in size."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,t.jsx)(o,{children:(0,t.jsxs)(l,{children:[(0,t.jsx)(a,{type:"do",children:"Only show a progress indicator if the expected wait time is more than a second; for example, whenever making a request to the server."}),(0,t.jsx)(a,{type:"do",children:"Use animations to soften transitions between states. Motion focuses attention on what's important without creating unnecessary distraction. Check out the Material guidance on motion."})]})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"related",children:"Related"}),"\n",(0,t.jsx)(s.h3,{id:"components",children:"Components"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.a,{href:"/components/progress-and-loading/skeleton",children:"skeleton loading"})," when content size/shape is known."]}),"\n",(0,t.jsxs)(s.li,{children:["Use a ",(0,t.jsx)(s.a,{href:"/components/notifications-and-messages/busy-indicator",children:"busy indicator"})," to to prevent users from interacting with content on a page due to a change, server error, or form submission."]}),"\n",(0,t.jsxs)(s.li,{children:["Use a ",(0,t.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"circular progress"})," spinner inside a component to communicate that either a component's state or data is changing."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"patterns",children:"Patterns"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"#",children:"Progress and loading"})," (Coming soon!)"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://99percentinvisible.org/episode/wait-wait-tell-me/transcript/",children:"Wait Wait... Tell Me!"})," (99% Invisible)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a",children:"Everything you need to know about skeleton screens"})," (Medium)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Loading",children:"Progressive Loading"})," (MDN Web Docs)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://usersnap.com/blog/progress-indicators/",children:"Improving the UX of Progress Indicators and Feedback Notifications"})," (Usersnap)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://www.lukew.com/ff/entry.asp?1797",children:"Mobile Design Details: Avoid The Spinner"})," (LukeW)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"http://www.guillaumegronier.com/cv/resources/Articles/2013_WorkshopHCI_Gronier.pdf",children:"How to Improve Perceived Waiting Time in HCI: A Psychological Approach"})," (Study)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://medium.com/swlh/the-illusion-of-time-8f321fa2f191",children:"The Illusion of Time"})," (Medium)"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},99357:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/linear-progress-8008a8ffcf24ca127be7cc3bf579e759.png"},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var r=n(96540);const t={},i=r.createContext(t);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);