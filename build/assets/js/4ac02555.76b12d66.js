"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[3458],{28466:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/fields/chip-field/chip-field","title":"Chip field","description":"Overview","source":"@site/docs/components/fields/chip-field/chip-field.md","sourceDirName":"components/fields/chip-field","slug":"/components/fields/chip-field/","permalink":"/components/fields/chip-field/","draft":false,"unlisted":false,"editUrl":"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/components/fields/chip-field/chip-field.md","tags":[],"version":"current","lastUpdatedAt":1738178637000,"frontMatter":{"sidebar_custom_props":{"shortDescription":"The chip field enables user input, and verifies that input, by converting text into chips.","thumbnail":"./img/all-components/chip-field-mini.png"}},"sidebar":"componentsSidebar","previous":{"title":"Autocomplete","permalink":"/components/fields/autocomplete/"},"next":{"title":"File picker","permalink":"/components/fields/file-picker/"}}');var t=n(74848),o=n(28453);const l={sidebar_custom_props:{shortDescription:"The chip field enables user input, and verifies that input, by converting text into chips.",thumbnail:"./img/all-components/chip-field-mini.png"}},r="Chip field",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Use when",id:"use-when",level:3},{value:"Don&#39;t use when",id:"dont-use-when",level:3},{value:"States",id:"states",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3}];function a(e){const i={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components},{ComponentVisual:s,DoDont:l,DoDontGrid:r,DoDontImage:c,DoDontRow:d,ImageBlock:a}=i;return s||p("ComponentVisual",!0),l||p("DoDont",!0),r||p("DoDontGrid",!0),c||p("DoDontImage",!0),d||p("DoDontRow",!0),a||p("ImageBlock",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"chip-field",children:"Chip field"})}),"\n",(0,t.jsx)(s,{storybookUrl:"https://forge.tylerdev.io/main/?path=/docs/components-chip-field--docs",children:(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{src:n(45196).A+"",width:"896",height:"288"})})}),"\n",(0,t.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(i.p,{children:"Input chips represent a complex piece of information in compact form, such as an entity (person, place, or thing) or text. They enable user input and verify that input by converting text into chips."}),"\n",(0,t.jsx)(i.h3,{id:"use-when",children:"Use when"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Users are selecting from a collection of options."}),"\n",(0,t.jsx)(i.li,{children:"Inputs need to be validated individually."}),"\n",(0,t.jsx)(i.li,{children:"Inputs are removable and should be removed individually."}),"\n",(0,t.jsx)(i.li,{children:"Entering freeform or new categories."}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"dont-use-when",children:"Don't use when"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Displaying static attributes. Use ",(0,t.jsx)(i.a,{href:"/components/notifications-and-messages/badge",children:"badges"})," instead."]}),"\n",(0,t.jsxs)(i.li,{children:["Entering data that's more than a phrase or two. Use a  it requires more than one field to provide the context to the user, consider managing your collection through the ",(0,t.jsx)(i.a,{href:"/components/lists/list",children:"list"})," instead."]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"states",children:"States"}),"\n",(0,t.jsx)(a,{children:(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Alt text",src:n(36677).A+"",width:"1330",height:"858"})})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)(d,{children:[(0,t.jsx)(c,{children:(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"A chip field that wraps to two lines.",src:n(34808).A+"",width:"918",height:"226"})})}),(0,t.jsx)(c,{children:(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"A chip field with invalid chips.",src:n(16066).A+"",width:"648",height:"150"})})})]}),(0,t.jsxs)(d,{children:[(0,t.jsx)(l,{type:"do",children:"Input field grows as chips are added to it."}),(0,t.jsx)(l,{type:"caution",children:"Some or all chips may be considered invalid."})]})]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"related",children:"Related"}),"\n",(0,t.jsx)(i.h3,{id:"components",children:"Components"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Use a ",(0,t.jsx)(i.a,{href:"/components/notifications-and-messages/badge",children:"badge"})," for non-interactive data."]}),"\n",(0,t.jsxs)(i.li,{children:["Use ",(0,t.jsx)(i.a,{href:"/components/utilities/chips",children:"chips"})," to displays filters and choices."]}),"\n",(0,t.jsxs)(i.li,{children:["The chip field can be use used with an ",(0,t.jsx)(i.a,{href:"/components/fields/autocomplete",children:"autocomplete"})," to facilitate searching."]}),"\n",(0,t.jsxs)(i.li,{children:["For an input field without suggested options, use  ",(0,t.jsx)(i.a,{href:"/components/fields/text-field",children:"text fields"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["For a short list of selectable options, use the ",(0,t.jsx)(i.a,{href:"/components/fields/select",children:"select"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["For a short list of selectable options that optimize discoverability, use ",(0,t.jsx)(i.a,{href:"/components/controls/checkbox",children:"checkboxes"})," or ",(0,t.jsx)(i.a,{href:"/components/controls/radio-button",children:"radio buttons"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"patterns",children:"Patterns"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Chip fields may be used in ",(0,t.jsx)(i.a,{href:"/patterns/forms",children:"forms"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}function p(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},34808:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/chip-field-do-1635e2a874d6b3978c5b2bd530e51db5.png"},36677:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/chip-field-states-abda50991b3c2ecbba51a67c4a4382d4.png"},45196:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/chip-field-0cba02d1cd09f3e380ef1217dddfedb0.png"},16066:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/invalid-chips-fd44a4188635531bb25d56aaf4414412.png"},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>r});var s=n(96540);const t={},o=s.createContext(t);function l(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);