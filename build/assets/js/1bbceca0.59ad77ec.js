"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[3412],{4697:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"components/progress-and-loading/skeleton/skeleton","title":"Skeleton","description":"Overview: Progress indicators","source":"@site/docs/components/progress-and-loading/skeleton/skeleton.md","sourceDirName":"components/progress-and-loading/skeleton","slug":"/components/progress-and-loading/skeleton/","permalink":"/components/progress-and-loading/skeleton/","draft":false,"unlisted":false,"editUrl":"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/components/progress-and-loading/skeleton/skeleton.md","tags":[],"version":"current","lastUpdatedAt":1738178637000,"frontMatter":{"sidebar_custom_props":{"shortDescription":"A skeleton screen provides a visual cue that content is being loaded.","thumbnail":"./img/all-components/skeleton-mini.png"}},"sidebar":"componentsSidebar","previous":{"title":"Linear progress","permalink":"/components/progress-and-loading/linear-progress/"},"next":{"title":"Stepper","permalink":"/components/steppers/stepper/"}}');var o=n(74848),i=n(28453);const r={sidebar_custom_props:{shortDescription:"A skeleton screen provides a visual cue that content is being loaded.",thumbnail:"./img/all-components/skeleton-mini.png"}},l="Skeleton",a={},d=[{value:"Overview: Progress indicators",id:"overview-progress-indicators",level:2},{value:"Types of progress indicators",id:"types-of-progress-indicators",level:3},{value:"Overview: Skeleton",id:"overview-skeleton",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3},{value:"Resources",id:"resources",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{ComponentVisual:t,DoDontGrid:r,DoDontText:l,DoDontTextSection:a}=s;return t||p("ComponentVisual",!0),r||p("DoDontGrid",!0),l||p("DoDontText",!0),a||p("DoDontTextSection",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"skeleton",children:"Skeleton"})}),"\n",(0,o.jsx)(t,{storybookUrl:"https://forge.tylerdev.io/main/?path=/docs/components-skeleton--docs",children:(0,o.jsx)(s.p,{children:(0,o.jsx)(s.img,{src:n(73215).A+"",width:"896",height:"288"})})}),"\n",(0,o.jsx)(s.h2,{id:"overview-progress-indicators",children:"Overview: Progress indicators"}),"\n",(0,o.jsx)(s.p,{children:"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. They communicate an app\u2019s state and indicate available actions, such as whether users can navigate away from the current screen. Use a progress indicator for operations that take more than 1 second."}),"\n",(0,o.jsx)(s.p,{children:"Progress indicators are used to:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Assure the user that the system is working."}),"\n",(0,o.jsx)(s.li,{children:"Provide operational transparency."}),"\n",(0,o.jsx)(s.li,{children:"Communicate progress made vs progress pending."}),"\n",(0,o.jsx)(s.li,{children:"Reduce users perception of time elapsed."}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"types-of-progress-indicators",children:"Types of progress indicators"}),"\n",(0,o.jsxs)(s.table,{children:[(0,o.jsx)(s.thead,{children:(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.th,{style:{textAlign:"left"},children:"Context"}),(0,o.jsx)(s.th,{style:{textAlign:"left"},children:"Component"}),(0,o.jsx)(s.th,{style:{textAlign:"left"},children:"Guidance"})]})}),(0,o.jsxs)(s.tbody,{children:[(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Initial page load"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Skeleton + progressive loading"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Use skeleton loading when content size/shape is known. Load skeleton components, then fade in components as they become available."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Initial page load"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Linear page progress"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Use when the content to be loaded is of unknown or variable size or quantity. Display a description of the process with a linear progress bar (see pattern below)."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Full page load or change"}),(0,o.jsxs)(s.td,{style:{textAlign:"left"},children:["Full page ",(0,o.jsx)(s.a,{href:"/components/notifications-and-messages/busy-indicator",children:"busy indicator"})]}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Use an overlay to prevent users from interacting with content on a page due to a change, server error, or form submission."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Multiple components"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Skeleton + progressive loading"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Load skeleton components, then fade in components as they become available."})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Single component within a page"}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:(0,o.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"Inline circular progress spinner"})}),(0,o.jsx)(s.td,{style:{textAlign:"left"},children:"Use a contextual circular progress spinner to communicate that either a component's state or data is changing."})]})]})]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"overview-skeleton",children:"Overview: Skeleton"}),"\n",(0,o.jsxs)(s.p,{children:["A skeleton screen is a low fidelity UI into which information is gradually loaded. It gives users a visual cue that the content is being loaded into each UI element and can create perceptions of faster load times (check out a sample UX ",(0,o.jsx)(s.a,{href:"https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a",children:"study"}),"). Because of this, it is Forge\u2019s recommended method for loading in new content. ",(0,o.jsx)(s.strong,{children:"Use when content size/shape is known."})]}),"\n",(0,o.jsx)(s.p,{children:"Skeleton patterns can be used to load a page initially or to load specific components after an initial load while still allowing users to interact with the rest of the page."}),"\n",(0,o.jsx)(s.p,{children:"Benefits of skeleton loading:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Puts the focus on progress, rather than wait time."}),"\n",(0,o.jsx)(s.li,{children:"Is associated with faster perceived loads times"}),"\n",(0,o.jsx)(s.li,{children:"Eliminates surprise."}),"\n",(0,o.jsx)(s.li,{children:"Provides a clear indication of progress."}),"\n"]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsxs)(a,{children:[(0,o.jsx)(l,{type:"do",children:"Use Use skeleton loading when content size/shape is known and the wait time is longer than 1 second."}),(0,o.jsx)(l,{type:"do",children:"Ensure that performance is optimized within the application to minimize load times overall."}),(0,o.jsx)(l,{type:"do",children:'When loading a list, displaying two to three "list items" in the skeleton should suffice; the skeleton items don\'t need to match the final number of elements loaded in.'})]}),(0,o.jsxs)(a,{children:[(0,o.jsx)(l,{type:"dont",children:"Build complex UIs with a skeleton. Rectangles and circles work well to represent most UI elements."}),(0,o.jsx)(l,{type:"dont",children:"Don't use a skeleton for pages that should take under a second to load."})]})]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"related",children:"Related"}),"\n",(0,o.jsx)(s.h3,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["Use a ",(0,o.jsx)(s.a,{href:"/components/progress-and-loading/linear-progress",children:"linear progress indicator"})," to communicate that a specific component is loading. Linear progress indicators may be used at the bottom of text fields, in dropdowns, and in expansion panels."]}),"\n",(0,o.jsxs)(s.li,{children:["Use a ",(0,o.jsx)(s.a,{href:"/components/notifications-and-messages/busy-indicator",children:"full page busy indicator"})," to to prevent users from interacting with content on a page due to a change, server error, or form submission."]}),"\n",(0,o.jsxs)(s.li,{children:["Use a ",(0,o.jsx)(s.a,{href:"/components/progress-and-loading/circular-progress",children:"circular progress spinner"})," inside a component to communicate that either a component's state or data is changing."]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"patterns",children:"Patterns"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/patterns/progress-and-loading",children:"Progress and loading"})}),"\n"]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a",children:"What you should know about skeleton screens"})," (UXDesign.cc)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://99percentinvisible.org/episode/wait-wait-tell-me/transcript/",children:"Wait Wait... Tell Me!"})," (99% Invisible)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a",children:"Everything you need to know about skeleton screens"})," (Medium)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Loading",children:"Progressive Loading"})," (MDN Web Docs)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://usersnap.com/blog/progress-indicators/",children:"Improving the UX of Progress Indicators and Feedback Notifications"})," (Usersnap)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://www.lukew.com/ff/entry.asp?1797",children:"Mobile Design Details: Avoid The Spinner"})," (LukeW)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"http://www.guillaumegronier.com/cv/resources/Articles/2013_WorkshopHCI_Gronier.pdf",children:"How to Improve Perceived Waiting Time in HCI: A Psychological Approach"})," (Study)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://medium.com/swlh/the-illusion-of-time-8f321fa2f191",children:"The Illusion of Time"})," (Medium)"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},73215:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/skeleton-ebcc8e9e671ec272963aaa4224ae29f1.png"},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var t=n(96540);const o={},i=t.createContext(o);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);