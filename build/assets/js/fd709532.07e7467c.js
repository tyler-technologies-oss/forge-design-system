"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[5905],{12211:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"get-started/styles/icons/icons","title":"Icons","description":"Overview","source":"@site/docs/get-started/styles/icons/icons.md","sourceDirName":"get-started/styles/icons","slug":"/get-started/styles/icons/","permalink":"/get-started/styles/icons/","draft":false,"unlisted":false,"editUrl":"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/get-started/styles/icons/icons.md","tags":[],"version":"current","lastUpdatedAt":1706823682000,"frontMatter":{},"sidebar":"getStartedSidebar","previous":{"title":"Branding: Community","permalink":"/get-started/branding-community"},"next":{"title":"Illustrations","permalink":"/get-started/styles/illustrations/"}}');var i=n(74848),o=n(28453);const r={},a="Icons",c={},d=[{value:"Overview",id:"overview",level:2},{value:"States",id:"states",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3}];function l(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{DoDontGrid:s,DoDontText:r,DoDontTextSection:a}=t;return s||p("DoDontGrid",!0),r||p("DoDontText",!0),a||p("DoDontTextSection",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"icons",children:"Icons"})}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"Tyler Forge provides a purposeful set of iconography. Consistent iconography is an expression of brand and creates clear visual patterns and expectations. Icons can be accessed as a library in Figma (designers), and as a font or SVG icon library (developers)."}),"\n",(0,i.jsx)(t.p,{children:"Tyler Forge uses icons from the Material set, the Material extended set, and small set of custom icons."}),"\n",(0,i.jsx)(t.p,{children:"Icons are distributed via an npm package and static files hosted on our CDN. Check out the development tab for more information."}),"\n",(0,i.jsx)(t.p,{children:"Icons may be used to represent information visually or  to represent an action (icon buttons)."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"states",children:"States"}),"\n",(0,i.jsx)(t.p,{children:"Icon colors are meant to provide consistent visual cues around interactivity. The Tyler Forge system provides colors for the various states they can appear in, which are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Active and resting"}),": This is the default color. It's used when a user is currently interacting with the icon, or the icon is active on the page and is interactable"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Resting - secondary"}),": A secondary, muted, version of the resting state. This is used in areas with large sets of data, such as data tables, where the muted color is less distracting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Disabled"}),": Icon isn\u2019t interactive."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"On light:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"The three icon colors for on a light background are shown top to bottom: Active and resting which is the default color at 87% black, resting secondary at 54% black, and disabled at 38% black. To the right of each is their respective theme and rgba value.",src:n(77340).A+"",width:"896",height:"312"})}),"\n",(0,i.jsx)(t.p,{children:"On dark:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"The three icon colors for on a dark background are shown top to bottom: Active and resting which is the default color at 100% white, resting secondary at 70% white, and disabled at 50% white. To the right of each is their respective theme and rgba value.",src:n(64402).A+"",width:"896",height:"312"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsxs)(a,{children:[(0,i.jsx)(r,{type:"do",children:"Use a tooltip with icon buttons to communicate the action\u2019s name."}),(0,i.jsx)(r,{type:"do",children:"Icons without text descriptor may be used to represent familiar actions (\u201cSave,\u201d \u201cCancel\u201d, \u201cUpload,\u201d \u201cAttach\u201d)."}),(0,i.jsx)(r,{type:"do",children:"For less familiar actions, use an icon plus text (\u201cAdd a photo,\u201d \u201cStart a new document\u201d)"})]}),(0,i.jsx)(a,{children:(0,i.jsx)(r,{type:"dont",children:"Don\u2019t use an icon alone to represent an unfamiliar action or concept. (\u201cAdd a new receipt.\u201d)"})})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"related",children:"Related"}),"\n",(0,i.jsx)(t.h3,{id:"components",children:"Components"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Icons may be used as ",(0,i.jsx)(t.a,{href:"/components/buttons/icon-button",children:"icon buttons"})]}),"\n",(0,i.jsxs)(t.li,{children:["Icons may be used in ",(0,i.jsx)(t.a,{href:"/components/lists/list",children:"lists"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"patterns",children:"Patterns"}),"\n",(0,i.jsx)(t.p,{children:"Coming soon..."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},64402:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/icons-dark-e357340d056530f9673a265ed4e860c8.png"},77340:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/icons-light-eeec1bbb05798247831a790984265647.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);