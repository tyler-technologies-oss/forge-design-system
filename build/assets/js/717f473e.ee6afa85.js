"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[5387],{81477:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"components/controls/switch/switch","title":"Switch","description":"Overview","source":"@site/docs/components/controls/switch/switch.md","sourceDirName":"components/controls/switch","slug":"/components/controls/switch/","permalink":"/components/controls/switch/","draft":false,"unlisted":false,"editUrl":"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/components/controls/switch/switch.md","tags":[],"version":"current","lastUpdatedAt":1719420852000,"frontMatter":{"sidebar_custom_props":{"shortDescription":"Switches toggle the state of a single item on or off.","thumbnail":"./img/all-components/switch-mini.png"}},"sidebar":"componentsSidebar","previous":{"title":"Radio button","permalink":"/components/controls/radio-button/"},"next":{"title":"Calendar","permalink":"/components/date-and-time/calendar/"}}');var o=n(74848),i=n(28453);const r={sidebar_custom_props:{shortDescription:"Switches toggle the state of a single item on or off.",thumbnail:"./img/all-components/switch-mini.png"}},c="Switch",l={},h=[{value:"Overview",id:"overview",level:2},{value:"Switches",id:"switches",level:3},{value:"Best practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3},{value:"Resources",id:"resources",level:2}];function a(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{ComponentVisual:s,DoDont:r,DoDontGrid:c,DoDontImage:l,DoDontRow:h,DoDontText:a,DoDontTextSection:d}=t;return s||p("ComponentVisual",!0),r||p("DoDont",!0),c||p("DoDontGrid",!0),l||p("DoDontImage",!0),h||p("DoDontRow",!0),a||p("DoDontText",!0),d||p("DoDontTextSection",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"switch",children:"Switch"})}),"\n",(0,o.jsx)(s,{storybookUrl:"https://forge.tylerdev.io/main/?path=/docs/components-switch--docs",children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:n(16099).A+"",width:"896",height:"288"})})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(t.p,{children:["Switches are a type of ",(0,o.jsx)(t.strong,{children:"selection control."})," There are three types of selection controls: 1. Checkboxes, 2. Radio buttons, 3. Switches."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/components/controls/radio-button",children:"Radio buttons"}),": allow the selection of a single option from a set."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/components/controls/checkbox",children:"Checkboxes"}),": allow the selection of multiple options from a set."]}),"\n",(0,o.jsx)(t.li,{children:"Switches: allow a selection to be turned on or off."}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"switches",children:"Switches"}),"\n",(0,o.jsx)(t.p,{children:"Switches offer binary options (on/off, true/false)."}),"\n",(0,o.jsx)(t.p,{children:"Use switches when:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["communicating that a setting will ",(0,o.jsx)(t.strong,{children:"be instantly applied"}),' or changed (without the use of a "submit" button for example).']}),"\n",(0,o.jsxs)(t.li,{children:["a setting ",(0,o.jsx)(t.strong,{children:"requires an on/off"})," or show/hide function to display the results."]}),"\n",(0,o.jsxs)(t.li,{children:["a user needs to perform ",(0,o.jsx)(t.strong,{children:"instantaneous actions"})," that do not need a review or confirmation."]}),"\n",(0,o.jsxs)(t.li,{children:["a user is toggling ",(0,o.jsx)(t.strong,{children:"independent features or behaviors."})]}),"\n"]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,o.jsxs)(c,{children:[(0,o.jsxs)(d,{children:[(0,o.jsx)(a,{type:"do",children:'Provide clear nonneutral labels. Labels should describe what the control will do when the switch is on. When in doubt, say the label aloud and append \u201con/off\u201d to the end. If it doesn\u2019t make sense, then rewrite the label (ie, "Show week number" instead of "Include week number?").'}),(0,o.jsx)(a,{type:"do",children:"Match label text to state of the state of the switch. Turning the switch on should not turn something off, and conversely, turning a switch off should not turn something on."})]}),(0,o.jsxs)(d,{children:[(0,o.jsx)(a,{type:"dont",children:'Don\'t use switches for settings that require additional user action, such as "Save," "Submit," "Cancel." Use a checkbox instead.'}),(0,o.jsx)(a,{type:"dont",children:"Don't use a switch for an option that has a neutral or indeterminate state. Use a checkbox instead."}),(0,o.jsx)(a,{type:"dont",children:"Don't use switches to display multiple related options from a user must choose. Use checkboxes instead."}),(0,o.jsx)(a,{type:"dont",children:"Don't nest switches. Use checkboxes instead in order to display an indeterminate state at the parent node."}),(0,o.jsx)(a,{type:"dont",children:"Don't use switches in filters. Use checkboxes instead."})]})]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsxs)(c,{children:[(0,o.jsx)(h,{children:(0,o.jsx)(l,{children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Image of a button toggle with the options &quot;List view, map view.&quot;",src:n(39155).A+"",width:"350",height:"350"})})})}),(0,o.jsx)(h,{children:(0,o.jsx)(r,{type:"dont",children:"Don't use switches for opposing options. Switches should only be used for binary options; use a button toggle for opposing options."})})]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"related",children:"Related"}),"\n",(0,o.jsx)(t.h3,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.a,{href:"/components/controls/radio-button",children:"radio buttons"})," to allow for the selection of a single option from a set."]}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.a,{href:"/components/controls/checkbox",children:"checkboxes"})," to allow for the selection of multiple options from a set."]}),"\n",(0,o.jsxs)(t.li,{children:["Use a ",(0,o.jsx)(t.a,{href:"/components/controls/button-toggle",children:"button toggle"})," to allow for the selection of a single option from a small set."]}),"\n",(0,o.jsxs)(t.li,{children:["Use choice ",(0,o.jsx)(t.a,{href:"/components/utilities/chips",children:"chips"})," to allow for the selection of a single option from a small set, especially in mobile contexts."]}),"\n",(0,o.jsxs)(t.li,{children:["Use a ",(0,o.jsx)(t.a,{href:"/components/fields/select",children:"select"})," to select options when space is limited."]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"patterns",children:"Patterns"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Forms (Coming soon!)"}),"\n",(0,o.jsx)(t.li,{children:"Rich Text Editor (recommended: TinyMCE, Quill)"}),"\n"]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://uxplanet.org/checkbox-vs-toggle-switch-7fc6e83f10b8",children:"Checkbox vs Toggle Switch"})," (UX Planet)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://uxmovement.com/buttons/when-to-use-a-switch-or-checkbox/",children:"When to Use a Switch or Checkbox"})," (UX Movement)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://www.nngroup.com/articles/toggle-switch-guidelines/",children:"Toggle-Switch Guidelines"})," (NN Group)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://uxmovement.com/mobile/stop-misusing-toggle-switches/",children:"Stop Misusing Toggle Switches"})," (UX Movement)"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},39155:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/switch-dont-d7ac0071b58c999230100ea9954e5f29.png"},16099:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/switch-232a464605c334d43850839fc4c0ffd7.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);