name: Deploy

on:
  push:
    branches:
      - main
      - chore/migrate-to-terraform
    paths-ignore:
      - 'infrastructure/**'
      - 'lambda_functions/**'
  workflow_dispatch:

concurrency: deploy-${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v4
        env:
          NPM_TOKEN: ${{ secrets.FORGE_NPM_TOKEN }}
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache .docusaurus Directory
        uses: actions/cache@v4
        with:
          path: .cache
          key: ${{ runner.os }}-cache-docusaurus-main
          restore-keys: ${{ runner.os }}-cache-docusaurus-main

      - name: Cache build Directory
        uses: actions/cache@v4
        with:
          path: public
          key: ${{ runner.os }}-public-docusaurus-main
          restore-keys: ${{ runner.os }}-public-docusaurus-main

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      
      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.FORGE_NPM_TOKEN }}
        run: npm ci

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::505039608154:role/forge-new-github-oidc
          aws-region: ${{ secrets.AWS_S3_BUCKET_REGION }}
      - name: Deploy AWS
        run: |
          aws s3 sync build s3://forge-docs-assets-forge-new-us-east-1/ --region ${{ secrets.AWS_S3_BUCKET_REGION }} --delete --cache-control=no-cache,no-store,must-revalidate --acl private
          aws cloudfront create-invalidation --distribution-id EZG282H6PA8GQ --paths "/*"
