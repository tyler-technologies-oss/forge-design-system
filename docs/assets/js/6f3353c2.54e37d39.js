"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[1092],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(o),m=n,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return o?r.createElement(f,l(l({ref:t},p),{},{components:o})):r.createElement(f,l({ref:t},p))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:n,l[1]=a;for(var c=2;c<i;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6851:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>v,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const i={description:"The color picker allows users to select a color visually. It can produce values in various formats such as Hex, RGBA and HSV.",keywords:["color","picker","hex","rgb","hsv"]},l="Color picker",a={unversionedId:"components/utilities/color-picker",id:"components/utilities/color-picker",title:"Color picker",description:"The color picker allows users to select a color visually. It can produce values in various formats such as Hex, RGBA and HSV.",source:"@site/docs/components/utilities/color-picker.md",sourceDirName:"components/utilities",slug:"/components/utilities/color-picker",permalink:"/components/utilities/color-picker",draft:!1,editUrl:"https://github.com/tyler-technologies-oss/forge-design-system/blob/main/docs/components/utilities/color-picker.md",tags:[],version:"current",lastUpdatedAt:1668029038,formattedLastUpdatedAt:"Nov 9, 2022",frontMatter:{description:"The color picker allows users to select a color visually. It can produce values in various formats such as Hex, RGBA and HSV.",keywords:["color","picker","hex","rgb","hsv"]},sidebar:"componentsSidebar",previous:{title:"Backdrop",permalink:"/components/utilities/backdrop"},next:{title:"Open icon",permalink:"/components/utilities/open-icon"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},u=p("ComponentVisual"),d=p("DoDontGrid"),m=p("DoDontTextSection"),f=p("DoDontText"),y={toc:c};function v(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"color-picker"},"Color picker"),(0,n.kt)(u,{figmaUrl:"",storybookUrl:"https://forge.tylerdev.io/main/?path=/story/components-color-picker--default",mdxType:"ComponentVisual"}),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Use the color picker when a user needs to select a color to make the selection a visual task rather than a technical one."),(0,n.kt)("hr",null),(0,n.kt)(d,{mdxType:"DoDontGrid"},(0,n.kt)(m,{mdxType:"DoDontTextSection"},(0,n.kt)(f,{type:"do",mdxType:"DoDontText"},"Allow users to enter colors in multiple formats (RGBA, HSVA, HEX) only if appropriate - if they'll be copying existing RGBA values from another product, for instance. Otherwise, hex values should suffice.  "),(0,n.kt)(f,{type:"do",mdxType:"DoDontText"},"Provide an option to enter text as RGBA if users should be able to select a transparent color. "),(0,n.kt)(f,{type:"do",mdxType:"DoDontText"},"If possible, allow users to select from a Material palette of colors to ensure harmony, consistency, and ADA compliance.")),(0,n.kt)(m,{mdxType:"DoDontTextSection"},(0,n.kt)(f,{type:"dont",mdxType:"DoDontText"},"Avoid providing too much customization, it can create unnecessary complexity. Consider allowing customization to support an expression of branding, such as public facing pages for a city."))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"related"},"Related"),(0,n.kt)("h3",{id:"components"},"Components"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/components/text-field"},"Text fields"))),(0,n.kt)("h3",{id:"patterns"},"Patterns"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#"},"Forms")," (Coming soon!)")))}v.isMDXComponent=!0}}]);