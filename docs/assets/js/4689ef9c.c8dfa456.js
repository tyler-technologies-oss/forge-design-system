"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[1454],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),g=a,u=m["".concat(l,".").concat(g)]||m[g]||d[g]||o;return r?n.createElement(u,s(s({ref:t},c),{},{components:r})):n.createElement(u,s({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},42535:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_custom_props:{shortDescription:"Linear indicators express an unspecified wait time or display the length of a process.",thumbnail:"./img/all-components/linear-progress-mini.png"}},s="Linear progress",i={unversionedId:"components/progress-and-loading/linear-progress/linear-progress",id:"components/progress-and-loading/linear-progress/linear-progress",title:"Linear progress",description:"Overview: Progress indicators",source:"@site/docs/components/progress-and-loading/linear-progress/linear-progress.md",sourceDirName:"components/progress-and-loading/linear-progress",slug:"/components/progress-and-loading/linear-progress/",permalink:"/components/progress-and-loading/linear-progress/",draft:!1,editUrl:"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/beta/docs/components/progress-and-loading/linear-progress/linear-progress.md",tags:[],version:"current",lastUpdatedAt:1682610055,formattedLastUpdatedAt:"Apr 27, 2023",frontMatter:{sidebar_custom_props:{shortDescription:"Linear indicators express an unspecified wait time or display the length of a process.",thumbnail:"./img/all-components/linear-progress-mini.png"}},sidebar:"componentsSidebar",previous:{title:"Circular progress",permalink:"/components/progress-and-loading/circular-progress/"},next:{title:"Skeleton",permalink:"/components/progress-and-loading/skeleton/"}},l={},p=[{value:"Overview: Progress indicators",id:"overview-progress-indicators",level:2},{value:"Types of progress indicators",id:"types-of-progress-indicators",level:3},{value:"Overview: Linear progress indicator",id:"overview-linear-progress-indicator",level:2},{value:"When to use: Linear vs circular progress indicators",id:"when-to-use-linear-vs-circular-progress-indicators",level:2},{value:"Types",id:"types",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3},{value:"Resources",id:"resources",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=c("ComponentVisual"),m=c("DoDontGrid"),g=c("DoDontTextSection"),u=c("DoDontText"),h={toc:p};function f(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"linear-progress"},"Linear progress"),(0,a.kt)(d,{storybookUrl:"https://forge.tylerdev.io/main/?path=/story/components-linear-progress--default",mdxType:"ComponentVisual"},(0,a.kt)("p",null,(0,a.kt)("img",{src:r(30242).Z,width:"896",height:"288"}))),(0,a.kt)("h2",{id:"overview-progress-indicators"},"Overview: Progress indicators"),(0,a.kt)("p",null,"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. They communicate an app\u2019s state and indicate available actions, such as whether users can navigate away from the current screen. Use a progress indicator for operations that take more than 1 second."),(0,a.kt)("p",null,"Progress indicators are used to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Assure the user that the system is working."),(0,a.kt)("li",{parentName:"ul"},"Provide operational transparency."),(0,a.kt)("li",{parentName:"ul"},"Communicate progress made vs progress pending."),(0,a.kt)("li",{parentName:"ul"},"Reduce users perception of time elapsed.")),(0,a.kt)("h3",{id:"types-of-progress-indicators"},"Types of progress indicators"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Context"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Component"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Guidance"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Initial page load"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/components/skeleton"},"Skeleton + progressive loading")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Use skeleton loading when content size/shape is known. Load skeleton components, then fade in components as they become available.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Initial page load"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Linear page progress"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Use when the content to be loaded is of unknown or variable size or quantity. Display a description of the process with a linear progress bar (see pattern below).")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Full page load or change"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Full page ",(0,a.kt)("a",{parentName:"td",href:"/components/busy-indicator"},"busy indicator")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Use an overlay to prevent users from interacting with content on a page due to a change, server error, or form submission.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Multiple components"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/components/skeleton"},"Skeleton + progressive loading")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Load skeleton components, then fade in components as they become available.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Single component within a page"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/components/progress-and-loading/circular-progress"},"Inline circular progress spinner")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Use a contextual circular progress indicator to communicate that either a component's state or data is changing.")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"overview-linear-progress-indicator"},"Overview: Linear progress indicator"),(0,a.kt)("p",null,"Use a linear progress indicator to communicate that a specific component is loading. Specifically, linear progress indicators may be used at the bottom of text fields, in dropdowns, and in expansion panels. "),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"/components/progress-and-loading/circular-progress"},"circular progress spinners")," inside components like list items, buttons, and cards. "),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"when-to-use-linear-vs-circular-progress-indicators"},"When to use: Linear vs circular progress indicators"),(0,a.kt)("p",null,"Forge offers two visually distinct types of progress indicators: linear and ",(0,a.kt)("a",{parentName:"p",href:"/components/progress-and-loading/circular-progress"},"circular progress")," indicators. Only one type should represent each kind of activity in an app. For example, if a refresh action displays a circular indicator on one screen, that same action shouldn\u2019t use a linear indicator elsewhere in the app.Researchers Gronier and Lallemend conducted an experiment to determine what the best metaphor to display during waiting time is. They measured a number of components (progress bar, countdown, text, etc) against perceived waiting time and satisfaction. They found that while a countdown yields the highest satisfaction level because it informs the user exactly how long they have to wait, ",(0,a.kt)("strong",{parentName:"p"},"linear progress bars")," were actually associated with the shortest perceived waiting time and a high satisfaction score (5.8 out of 7).\xa0",(0,a.kt)("a",{parentName:"p",href:"http://www.guillaumegronier.com/cv/resources/Articles/2013_WorkshopHCI_Gronier.pdf"},"Read more"),".\xa0For this reason, we recommend a heavier use of\xa0",(0,a.kt)("strong",{parentName:"p"},"linear progress indicators"),".\xa0"),(0,a.kt)("p",null,"Because ",(0,a.kt)("strong",{parentName:"p"},"circular progress indicators")," fit better inside components, use them to\xa0communicate the state of a component or its data is changing.\xa0Use circular progress indicators for inline components; use linear progress indicators for other scenarios."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"types"},"Types"),(0,a.kt)("p",null,"There are two types of linear progress indicators: determinate and indeterminate. "),(0,a.kt)("p",null,"Determinate indicators display how long a process will take. They should be used when the process completion rate can be detected."),(0,a.kt)("p",null,"Determinate progress indicators fill from 0% to 100%."),(0,a.kt)("p",null,"Indeterminate progress indicators move along a fixed track, growing and shrinking in size."),(0,a.kt)("hr",null),(0,a.kt)(m,{mdxType:"DoDontGrid"},(0,a.kt)(g,{mdxType:"DoDontTextSection"},(0,a.kt)(u,{type:"do",mdxType:"DoDontText"},"Only show a progress indicator if the expected wait time is more than a second; for example, whenever making a request to the server."),(0,a.kt)(u,{type:"do",mdxType:"DoDontText"},"Use animations to soften transitions between states. Motion focuses attention on what's important without creating unnecessary distraction. Check out the Material guidance on motion."))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"related"},"Related"),(0,a.kt)("h3",{id:"components"},"Components"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("a",{parentName:"li",href:"/components/skeleton"},"skeleton loading")," when content size/shape is known."),(0,a.kt)("li",{parentName:"ul"},"Use a ",(0,a.kt)("a",{parentName:"li",href:"/components/notifications-and-messages/busy-indicator"},"busy indicator")," to to prevent users from interacting with content on a page due to a change, server error, or form submission."),(0,a.kt)("li",{parentName:"ul"},"Use a ",(0,a.kt)("a",{parentName:"li",href:"/components/progress-and-loading/circular-progress"},"circular progress")," spinner inside a component to communicate that either a component's state or data is changing.")),(0,a.kt)("h3",{id:"patterns"},"Patterns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#"},"Progress and loading")," (Coming soon!)")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://99percentinvisible.org/episode/wait-wait-tell-me/transcript/"},"Wait Wait... Tell Me!")," (99% Invisible)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a"},"Everything you need to know about skeleton screens")," (Medium)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Loading"},"Progressive Loading")," (MDN Web Docs)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://usersnap.com/blog/progress-indicators/"},"Improving the UX of Progress Indicators and Feedback Notifications")," (Usersnap)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.lukew.com/ff/entry.asp?1797"},"Mobile Design Details: Avoid The Spinner")," (LukeW)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.guillaumegronier.com/cv/resources/Articles/2013_WorkshopHCI_Gronier.pdf"},"How to Improve Perceived Waiting Time in HCI: A Psychological Approach")," (Study)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://medium.com/swlh/the-illusion-of-time-8f321fa2f191"},"The Illusion of Time")," (Medium)")))}f.isMDXComponent=!0},30242:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/linear-progress-8008a8ffcf24ca127be7cc3bf579e759.png"}}]);