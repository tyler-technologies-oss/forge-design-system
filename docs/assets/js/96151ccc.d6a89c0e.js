"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[5429],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),g=o,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1915:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={title:"Adopting Container Queries",decription:"Use container queries in your code with a fallback for unsupported browsers.",authors:["sam.richardson"],tags:["forge","css","responsive design"]},i=void 0,s={permalink:"/blog/2023/05/05/adopting-container-queries",editUrl:"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/beta/blog/2023-05-05-adopting-container-queries/index.md",source:"@site/blog/2023-05-05-adopting-container-queries/index.md",title:"Adopting Container Queries",description:"As we move more and more toward responsive design there has been increasing interest in CSS container queries. For those of us who aren\u2019t on the cutting edge of CSS development, container queries are a new feature that allows us to apply styles based on a containing element\u2019s dimensions. This is conceptually similar to typical media queries, which are based instead on the qualities of the viewport as a whole.",date:"2023-05-05T00:00:00.000Z",formattedDate:"May 5, 2023",tags:[{label:"forge",permalink:"/blog/tags/forge"},{label:"css",permalink:"/blog/tags/css"},{label:"responsive design",permalink:"/blog/tags/responsive-design"}],readingTime:3.305,hasTruncateMarker:!0,authors:[{name:"Sam Richardson",title:"Senior Front End Software Engineer",url:"https://github.com/samrichardsontylertech",imageURL:"https://github.com/samrichardsontylertech.png",key:"sam.richardson"}],frontMatter:{title:"Adopting Container Queries",decription:"Use container queries in your code with a fallback for unsupported browsers.",authors:["sam.richardson"],tags:["forge","css","responsive design"]},nextItem:{title:"Enhanced Angular Integration",permalink:"/blog/2023/03/22/angular-proxies"}},c={authorsImageUrls:[void 0]},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As we move more and more toward responsive design there has been increasing interest in CSS container queries. For those of us who aren\u2019t on the cutting edge of CSS development, container queries are a new feature that allows us to apply styles based on a containing element\u2019s dimensions. This is conceptually similar to typical ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries"},"media queries"),", which are based instead on the qualities of the viewport as a whole."))}u.isMDXComponent=!0}}]);