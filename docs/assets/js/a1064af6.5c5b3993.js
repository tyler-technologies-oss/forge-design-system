"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[5963],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=m(n),d=r,g=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var m=2;m<o;m++)s[m]=n[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58131:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var a=n(87462),r=(n(67294),n(3905));const o={},s="System communication",i={unversionedId:"patterns/system-communication/system-communication",id:"patterns/system-communication/system-communication",title:"System communication",description:"Effective system communication facilitates trust in the system by communicating relevant information in the appropriate context.",source:"@site/docs/patterns/system-communication/system-communication.md",sourceDirName:"patterns/system-communication",slug:"/patterns/system-communication/",permalink:"/patterns/system-communication/",draft:!1,editUrl:"https://github.com/tyler-technologies-oss/forge-design-system/blob/main/docs/patterns/system-communication/system-communication.md",tags:[],version:"current",lastUpdatedAt:1670520375,formattedLastUpdatedAt:"Dec 8, 2022",frontMatter:{},sidebar:"patternsSidebar",previous:{title:"Search & filter",permalink:"/patterns/search-and-filter/"}},l={},m=[{value:"1. User goal: Inform me",id:"1-user-goal-inform-me",level:2},{value:"Design principles",id:"design-principles",level:3},{value:"Components to use",id:"components-to-use",level:3},{value:"2. User goal: Ask me",id:"2-user-goal-ask-me",level:2},{value:"Design principles",id:"design-principles-1",level:3},{value:"Components to use",id:"components-to-use-1",level:3},{value:"3. User goal: Suggest to me",id:"3-user-goal-suggest-to-me",level:2},{value:"Components to use",id:"components-to-use-2",level:3},{value:"Design principles",id:"design-principles-2",level:3}],c=(p="ImageBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var p;const u={toc:m};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"system-communication"},"System communication"),(0,r.kt)("p",null,"Effective system communication facilitates trust in the system by communicating relevant information in the appropriate context.  "),(0,r.kt)("p",null,"System communication aligns with the following user goals:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Inform me "),(0,r.kt)("li",{parentName:"ol"},"Ask me "),(0,r.kt)("li",{parentName:"ol"},"Suggest to me")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"1-user-goal-inform-me"},"1. User goal: Inform me"),(0,r.kt)("p",null,"Inform users of system information such as updates, errors, or offline functionality; or acknowledge actions that have been performed, such as a new record added, updated, or removed. "),(0,r.kt)("h3",{id:"design-principles"},"Design principles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Minimize interruptions.")," Only surface information that's critical to use of the app."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Match likelihood with criticality.")," Use less interruptive methods for less critical information.")),(0,r.kt)("h3",{id:"components-to-use"},"Components to use"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Component"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Intent"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Tradeoffs"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/components/notifications-and-messages/toast"},"Toast")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Use to inform users of a process that the app has performed or will perform. Non-interruptive."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Transient and may be missed; better for non critical information.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/components/inline-message"},"Inline message")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Use to display contextual information, such as an error summary or helpful tip, inside an element like a form or card."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Take up more screen real estate and persistent / non-dismissible.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/components/banner"},"Page banner")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Use to display one-time, dismissible page level information, such as new features or client announcements."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Transient and must be dismissed.")))),(0,r.kt)(c,{padded:!1,caption:"1. A toast provides a notification that records have been updated. <br> 2. An inline message provides additional information on a form.",mdxType:"ImageBlock"},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Image",src:n(83832).Z,width:"1400",height:"387"}))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"2-user-goal-ask-me"},"2. User goal: Ask me"),(0,r.kt)("p",null,"Ask users before taking potentially destructive actions, such as navigating away from a page with unsaved changes, deleting a record, or overwriting an existing record. "),(0,r.kt)("h3",{id:"design-principles-1"},"Design principles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Provide clear options."),' "Discard options" and "Cancel" is more descriptive than "Ok" and "Cancel," for example.')),(0,r.kt)("h3",{id:"components-to-use-1"},"Components to use"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/components/notifications-and-messages/dialog"},"Dialogs")," interrupt a user's work, but they can helpful in preventing data loss or when the system needs input from the user in order to continue."),(0,r.kt)(c,{padded:!1,caption:"1. A dialog asks users to confirm before navigating away from unsaved changes. <br> 2. A dialog prompts for confirmation before a destructive action.",mdxType:"ImageBlock"},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Image",src:n(55434).Z,width:"1400",height:"387"}))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"3-user-goal-suggest-to-me"},"3. User goal: Suggest to me"),(0,r.kt)("p",null,"Suggest actions or selections based on a user's history; such as recent searches or suggested selections."),(0,r.kt)("h3",{id:"components-to-use-2"},"Components to use"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Search (coming soon!)"),(0,r.kt)("li",{parentName:"ul"},"Suggest frequently paired options to users when appropriate on a multi ",(0,r.kt)("a",{parentName:"li",href:"/components/fields/select"},"select"),".")),(0,r.kt)("h3",{id:"design-principles-2"},"Design principles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Use existing behavior patterns to suggest logical options or next steps."))),(0,r.kt)(c,{padded:!1,caption:"1. A search suggests recent options to a use. <br> 2. A select suggests purchase orders that have been historically paired together.",mdxType:"ImageBlock"},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Image",src:n(38423).Z,width:"1400",height:"387"}))))}d.isMDXComponent=!0},55434:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ask-me-99a0119eb0529b6ac61d57f2951ac633.png"},83832:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/inform-me-85a6dfcb445a03551f7a68c65f25ddd0.png"},38423:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/suggest-f829da0b67309d078e1cac8d01997bab.png"}}]);