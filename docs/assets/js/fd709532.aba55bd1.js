"use strict";(self.webpackChunkforge_design_system=self.webpackChunkforge_design_system||[]).push([[5045],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,y=u["".concat(l,".").concat(m)]||u[m]||p[m]||s;return n?r.createElement(y,a(a({ref:t},d),{},{components:n})):r.createElement(y,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19894:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const s={},a="Icons",i={unversionedId:"get-started/styles/icons/icons",id:"get-started/styles/icons/icons",title:"Icons",description:"Overview",source:"@site/docs/get-started/styles/icons/icons.md",sourceDirName:"get-started/styles/icons",slug:"/get-started/styles/icons/",permalink:"/get-started/styles/icons/",draft:!1,editUrl:"https://pr.new/github.com/tyler-technologies-oss/forge-design-system/edit/main/docs/get-started/styles/icons/icons.md",tags:[],version:"current",lastUpdatedAt:1675445155,formattedLastUpdatedAt:"Feb 3, 2023",frontMatter:{},sidebar:"getStartedSidebar",previous:{title:"Branding: Community",permalink:"/get-started/branding-community"},next:{title:"Illustrations",permalink:"/get-started/styles/illustrations/"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"States",id:"states",level:2},{value:"Related",id:"related",level:2},{value:"Components",id:"components",level:3},{value:"Patterns",id:"patterns",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},p=d("DoDontGrid"),u=d("DoDontTextSection"),m=d("DoDontText"),y={toc:c};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"icons"},"Icons"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Tyler Forge provides a purposeful set of iconography. Consistent iconography is an expression of brand and creates clear visual patterns and expectations. Icons can be accessed as a library in Figma (designers), and as a font or SVG icon library (developers)."),(0,o.kt)("p",null,"Tyler Forge uses icons from the Material set, the Material extended set, and small set of custom icons."),(0,o.kt)("p",null,"Icons are distributed via an npm package and static files hosted on our CDN. Check out the development tab for more information."),(0,o.kt)("p",null,"Icons may be used to represent information visually or  to represent an action (icon buttons)."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"states"},"States"),(0,o.kt)("p",null,"Icon colors are meant to provide consistent visual cues around interactivity. The Tyler Forge system provides colors for \u201cactive + focused\u201d (user is currently interacting with the icon), \u201cresting\u201d (icon is interactive but isn\u2019t currently being used), and \u201cdisabled\u201d (icon isn\u2019t interactive). "),(0,o.kt)("hr",null),(0,o.kt)(p,{mdxType:"DoDontGrid"},(0,o.kt)(u,{mdxType:"DoDontTextSection"},(0,o.kt)(m,{type:"do",mdxType:"DoDontText"},"Use a tooltip with icon buttons to communicate the action\u2019s name."),(0,o.kt)(m,{type:"do",mdxType:"DoDontText"},"Icons without text descriptor may be used to represent familiar actions (\u201cSave,\u201d \u201cCancel\u201d, \u201cUpload,\u201d \u201cAttach\u201d)."),(0,o.kt)(m,{type:"do",mdxType:"DoDontText"},"For less familiar actions, use an icon plus text (\u201cAdd a photo,\u201d \u201cStart a new document\u201d)")),(0,o.kt)(u,{mdxType:"DoDontTextSection"},(0,o.kt)(m,{type:"dont",mdxType:"DoDontText"},"Don\u2019t use an icon alone to represent an unfamiliar action or concept. (\u201cAdd a new receipt.\u201d)"))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"related"},"Related"),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Icons may be used as ",(0,o.kt)("a",{parentName:"li",href:"/components/buttons/icon-button"},"icon buttons")),(0,o.kt)("li",{parentName:"ul"},"Icons may be used in ",(0,o.kt)("a",{parentName:"li",href:"/components/lists/list"},"lists"))),(0,o.kt)("h3",{id:"patterns"},"Patterns"),(0,o.kt)("p",null,"Coming soon..."))}f.isMDXComponent=!0}}]);